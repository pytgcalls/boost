name: build
on:
  push:
    paths-ignore:
      - "**.md"
      - "LICENSE"
      - "NOTICE"
      - ".gitignore"
    tags:
      - "*"

jobs:
  build:
    runs-on: ${{ matrix.platform.host }}
    strategy:
      matrix:
        platform:
          - name: linux-x86_64
            arch_image: x86_64
            host: ubuntu-latest
          - name: linux-arm64
            arch_image: arm64
            host: arm64-server
          - name: macos-arm64
            host: macos-15
          - name: windows-x86_64
            host: windows-2022
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        if: matrix.platform.name == 'linux-arm64'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Setup MSYS2
        if: matrix.platform.name == 'windows-x86_64'
        uses: msys2/setup-msys2@v2

      - name: Detect Native CMake Path (Windows)
        id: detect_cmake
        if: matrix.platform.name == 'windows-x86_64'
        shell: powershell
        run: |
          $cmake = (Get-Command cmake).Source
          echo "cmake_path=$cmake" >> $env:GITHUB_ENV

      - name: Install dependencies (Windows)
        if: matrix.platform.name == 'windows-x86_64'
        shell: msys2 {0}
        run: pacman -S --noconfirm base-devel git

      - name: Build boost (Linux)
        if: matrix.platform.name == 'linux-x86_64' || matrix.platform.name == 'linux-arm64'
        run: |
          docker run -v $(pwd):/app -w /app \
              ghcr.io/pytgcalls/ntgcalls/${{ matrix.platform.arch_image }}:latest bash build.sh

      - name: Build boost (Windows)
        if: matrix.platform.name == 'windows-x86_64'
        shell: msys2 {0}
        run: |
          export PATH="$(dirname "$(cygpath -u "$cmake_path")"):$PATH"
          bash build.sh

      - name: Build boost (macOS)
        if: matrix.platform.name == 'macos-arm64'
        run: bash build.sh

      - name: Prepare for artifact (Linux and macOS)
        if: matrix.platform.name != 'windows-x86_64'
        run: |
          tar -czvf boost.${{ matrix.platform.name }}.tar.gz artifacts

      - name: Prepare for artifact (Windows)
        if: matrix.platform.name == 'windows-x86_64'
        run: |
          Compress-Archive -Path artifacts -DestinationPath boost.${{ matrix.platform.name }}.zip

      - name: Upload artifact (Linux and macOS)
        uses: actions/upload-artifact@v4
        if: matrix.platform.name != 'windows-x86_64'
        with:
          name: boost.${{ matrix.platform.name }}.tar.gz
          path: boost.${{ matrix.platform.name }}.tar.gz

      - name: Upload artifact (Windows)
        uses: actions/upload-artifact@v4
        if: matrix.platform.name == 'windows-x86_64'
        with:
          name: boost.${{ matrix.platform.name }}.zip
          path: boost.${{ matrix.platform.name }}.zip

  create-release:
    name: Create Release
    if: contains(github.ref, 'tags/v')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/download
        with:
          platform: windows-x86_64
      - uses: ./.github/actions/download
        with:
          platform: linux-x86_64
      - uses: ./.github/actions/download
        with:
          platform: linux-arm64
      - uses: ./.github/actions/download
        with:
          platform: macos-arm64
      - name: Env to output
        run: |
          echo "package_paths<<EOF" >> $GITHUB_OUTPUT
          cat package_paths.env >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        id: env
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.env.outputs.package_paths }}